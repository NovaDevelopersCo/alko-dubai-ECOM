'use client'

import React, {useEffect, useRef, useState} from 'react'
import { fetchItems } from '@/lib/features/items/items'
import { selectItems } from '@/lib/features/items/items'
import { Item } from '@/Components/entity/item'
import { useAppDispatch, useAppSelector } from '@/lib/hooks'
import Grid from '../GridContainer/Grid'
import { Pagination } from 'antd'
import { selectFilter, setLimit } from '@/lib/features/filter/filter'
import { InputFetch } from '@/type/interfaceFilter'

function MainStore({gridCount,limit}:{gridCount:number, limit:number}) {
    const dispatch = useAppDispatch()
    const items = useAppSelector(selectItems).items
    const pages = useAppSelector(selectItems).totalPages
    const [currentPage, setCurrentPage] = useState<number>(0)
    const filter = useAppSelector(selectFilter) // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞

    const isInitialMount = useRef(true) // –°—Å—ã–ª–∫–∞, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –ø–µ—Ä–≤—ã–π –ª–∏ —Ä–∞–∑ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    dispatch(setLimit(8))
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const updateItems = () => {
        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç inputFetch, —É—á–∏—Ç—ã–≤–∞—è –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const inputFetch: InputFetch = {
            ...(filter.popularity ? { popularity: true } : {}), // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ popularity —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ true
            ...(filter.news ? { news: true } : {}),
            ...(filter.price ? { price: filter.price } : {}),
            ...(filter.max_price ? { max_price: filter.max_price } : {}),
            ...(filter.min_price ? { min_price: filter.min_price } : {}),
            ...(filter.category ? { category: filter.category } : {}),
            ...(filter.search ? { search: filter.search } : {}),
            ...(filter.limit ? { limit: filter.limit } : {}),
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ news —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ true
        }

        // –í—ã–∑—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —ç–∫—à–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        dispatch(fetchItems(inputFetch))
    }
    const limitCount = () => {
        switch (limit) {
            case 9:
                return 9;
            case 24:
                return 24;
            case 36:
                return 36;
            default:
                return 9;
        }
    }
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é updateItems —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    useEffect(() => {
        if (!isInitialMount.current) {
            updateItems();
        } else {
            isInitialMount.current = false;
        }
    }, [filter, dispatch, limit]);

    useEffect(() => {
        updateItems();
    }, [limit]);

    let products = null // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
    if (items && limit !== undefined) {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ limit —Å –ø–æ–º–æ—â—å—é slice
        const limitedItems = items.slice(
            currentPage * limit,
            currentPage * limit + limit,
        )
        products = limitedItems.map((obj: any) => (
            <Item key={obj.id} disabled={true} {...obj}></Item>
        ))
    }

    return (
        <div>
            {products && products.length > 0 ? (
                <Grid gridCount={gridCount}>{products}</Grid>
            ) : (
                <div className="w-full h-96 flex justify-center items-center">
                    –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–æüò¢
                </div>
            )}
            <Pagination
                className="text-center"
                showSizeChanger={false}
                onChange={(page) => {
                    setCurrentPage(page - 1)
                }}
                pageSize={
                    items && Object.keys(items).length > 0
                        ? Object.keys(items).length / pages
                        : 1
                }
                total={
                    items && Object.keys(items).length > 0
                        ? Object.keys(items).length
                        : 1
                }
            />
        </div>
    )
}

export default MainStore
